{
  "index_content": "# 条件规则索引目录\n\n## 规则概览\n本项目包含 8 个条件规则，涵盖国际化、后端架构、前端组件、事件管理等多个方面。\n\n---\n\n## 🌐 国际化相关\n\n### Rule 1: 如何国际化\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/如何国际化.md`\n\n**用途**: 指导页面国际化的完整流程\n- 创建和管理多语言文件（.lang.ts）\n- 集成到全局语言系统\n- 使用 getMessage 获取翻译文本\n\n**适用场景**: \n- 新增页面需要支持中英文切换\n- 现有页面添加国际化支持\n- 修改或扩展多语言内容\n\n---\n\n## 🔧 后端架构相关\n\n### Rule 2: FastAPI 路由组织规范\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/fastapi_router_organization.md`\n\n**适用文件**: \n- `src/auto_coder_web/proxy.py`\n- `src/auto_coder_web/common_router/*.py`\n- `src/auto_coder_web/routers/*.py`\n\n**用途**: 规范 FastAPI 应用的路由组织方式\n- 使用 APIRouter 模块化路由\n- 依赖注入最佳实践\n- 持久化配置管理\n- 异步文件操作规范\n\n**适用场景**:\n- 新增 API 路由模块\n- 重构现有路由结构\n- 实现配置持久化功能\n- 优化路由依赖注入\n\n### Rule 4: EventBus 参数修改规范\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/eventbus_parameter_modification.md`\n\n**适用文件**:\n- `src/auto_coder_web/event_bus.py`\n- `src/auto_coder_web/common_router/**/*.py`\n- `src/auto_coder_web/routers/**/*.py`\n- `src/auto_coder_web/services/**/*.py`\n\n**用途**: 安全修改事件总线参数的指导\n- 向后兼容的参数新增\n- 破坏性变更的处理策略\n- 参数重命名的过渡方案\n\n**适用场景**:\n- 修改现有事件定义\n- 新增事件参数\n- 重构事件系统\n- 保证系统向后兼容\n\n### Rule 7: 消息解析器扩展规范\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/agentic_message_parser_extension.md`\n\n**适用文件**:\n- `src/auto_coder_web/agentic_message_parser/**/*.py`\n- `src/auto_coder_web/routers/**/*.py`\n\n**用途**: 为不同工具添加消息处理逻辑\n- 注册新的消息解析器\n- 处理工具输出的消息格式\n- 优化 token 消耗\n\n**适用场景**:\n- 新增工具需要消息处理\n- 优化现有工具的输出格式\n- 减少大模型 token 消耗\n- 提升用户体验\n\n---\n\n## 🎨 前端组件相关\n\n### Rule 5: 基础设置页配置新增规范\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/basic_settings_configuration.md`\n\n**适用文件**:\n- `frontend/src/components/MainContent/BasicSettings.tsx`\n- `frontend/src/components/MainContent/BasicSettings.lang.ts`\n- `frontend/src/components/Sidebar/lang.ts`\n\n**用途**: 在设置页面正确添加新配置选项\n- 多语言支持集成\n- 状态管理和 API 集成\n- 条件显示和依赖关系\n- UI 组件规范\n\n**适用场景**:\n- 新增系统配置选项\n- 修改现有配置界面\n- 实现配置条件显示\n- 优化设置页面用户体验\n\n### Rule 8: 全局热键管理最佳实践\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/hotkey_management.md`\n\n**用途**: 实现全局热键管理系统\n- 通过事件总线分发热键事件\n- 避免热键冲突\n- 支持多面板作用域\n- 跨平台兼容性\n\n**适用场景**:\n- 新增全局快捷键\n- 优化用户交互体验\n- 解决热键冲突问题\n- 实现面板级热键管理\n\n---\n\n## 📚 项目文档相关\n\n### Rule 3: auto-coder.web 详解结构\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/project.md`\n\n**用途**: 项目整体架构和组件结构说明\n- 设置和分组面板的组件层次\n- 用户交互流程图\n- 配置和状态管理说明\n\n**适用场景**:\n- 了解项目整体架构\n- 新团队成员快速上手\n- 组件关系梳理\n- 系统设计参考\n\n### Rule 6: 规则索引\n**文件路径**: `/Users/williamzhu/projects/auto-coder.web/.autocoderrules/index.md`\n\n**用途**: 所有项目规则的索引和概览\n- 规则列表和简要说明\n- 快速定位相关规则\n\n**适用场景**:\n- 查找特定规则\n- 了解项目规范体系\n- 规则管理和维护\n\n---\n\n## 🔍 规则选择指南\n\n### 按开发阶段选择\n\n**项目初期**:\n- Rule 3: 了解项目结构\n- Rule 6: 熟悉规则体系\n\n**功能开发**:\n- Rule 2: 后端 API 开发\n- Rule 5: 前端配置页面\n- Rule 1: 国际化支持\n\n**功能扩展**:\n- Rule 4: 事件系统修改\n- Rule 7: 消息处理扩展\n- Rule 8: 热键功能增强\n\n### 按技术栈选择\n\n**后端开发**:\n- Rule 2: FastAPI 路由组织\n- Rule 4: EventBus 参数修改\n- Rule 7: 消息解析器扩展\n\n**前端开发**:\n- Rule 1: 国际化实现\n- Rule 5: 设置页面配置\n- Rule 8: 热键管理\n\n**全栈开发**:\n- Rule 3: 项目结构理解\n- Rule 6: 规则索引参考\n\n### 按问题类型选择\n\n**新功能开发**: Rule 2, 5, 7\n**国际化需求**: Rule 1\n**架构优化**: Rule 2, 4, 8\n**用户体验**: Rule 5, 8\n**系统维护**: Rule 4, 6",
  "rule_count": 8,
  "categories": []
}